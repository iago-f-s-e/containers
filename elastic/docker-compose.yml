version: '3'

services:
  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
    user: "0"
    command: >
      bash -c '
        if [ x${ELASTIC_PASSWORD} == x ]; then
          echo "Set the ELASTIC_PASSWORD environment variable in the .env file";
          exit 1;
        elif [ x${KIBANA_PASSWORD} == x ]; then
          echo "Set the KIBANA_PASSWORD environment variable in the .env file";
          exit 1;
        fi;
        if [ ! -f config/certs/ca.zip ]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f config/certs/certs.zip ]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: es01\n"\
          "    dns:\n"\
          "      - es01\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: kibana\n"\
          "    dns:\n"\
          "      - kibana\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;
        echo "Setting file permissions"
        chown -R root:root config/certs;
        find . -type d -exec chmod 750 \{\} \;;
        find . -type f -exec chmod 640 \{\} \;;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert config/certs/ca/ca.crt https://es01:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "Setting kibana_system password";
        until curl -s -X POST --cacert config/certs/ca/ca.crt -u "elastic:${ELASTIC_PASSWORD}" -H "Content-Type: application/json" https://es01:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done;
        echo "All done!";
      '
    healthcheck:
      test: [ "CMD-SHELL", "[ -f config/certs/es01/es01.crt ]" ]
      interval: 1s
      timeout: 5s
      retries: 120

  es01:
    depends_on:
      setup:
        condition: service_healthy
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    networks:
      - elastic
    environment:
      - CLI_JAVA_OPTS=-Xms2g -Xmx2g
      - node.name=es01
      - vm.max_map_count=${ES_MEM_LIMIT}
      - cluster.name=${CLUSTER_NAME}
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
#        - xpack.security.http.ssl.enabled=true
#        - xpack.security.http.ssl.key=certs/es01/es01.key
#        - xpack.security.http.ssl.certificate=certs/es01/es01.crt
#        - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
#        - xpack.security.http.ssl.verification_mode=certificate
#        - xpack.security.transport.ssl.enabled=true
#        - xpack.security.transport.ssl.key=certs/es01/es01.key
#        - xpack.security.transport.ssl.certificate=certs/es01/es01.crt
#        - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
#        - xpack.security.transport.ssl.verification_mode=certificate
#        - xpack.license.self_generated.type=${LICENSE}
#    mem_limit: 1073741824
    ulimits:
      memlock:
        soft: -1
        hard: -1
#    healthcheck:
#      test:
#        [
#          "CMD-SHELL",
#          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
#        ]
#      interval: 10s
#      timeout: 10s
#      retries: 120
    #    healthcheck:
    #      test:
    #        [
    #          "CMD-SHELL",
    #          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
    #        ]
    #      interval: 10s
    #      timeout: 10s
    #      retries: 120

#    elasticsearch:
#      container_name: elasticsearch
#      image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
#      # 8.x
#      environment: ['CLI_JAVA_OPTS=-Xms2g -Xmx2g','bootstrap.memory_lock=true','discovery.type=single-node','xpack.security.enabled=false', 'xpack.security.enrollment.enabled=false']
#      ports:
#        - 9200:9200
#      networks:
#        - elastic
#      ulimits:
#        memlock:
#          soft: -1
#          hard: -1
#        nofile:
#          soft: 65536
#          hard: 65536
#      deploy:
#        resources:
#          limits:
#            cpus: '2.0'
#          reservations:
#            cpus: '1.0'

  kibana:
    depends_on:
      - es01
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    volumes:
      - certs:/usr/share/kibana/config/certs
      - kibanadata:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    networks:
        - elastic
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=https://es01:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=d1a66dfd-c4d3-4a0a-8290-2abcb83ab3aa
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
    mem_limit: 1073741824
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

#
#    kibana2:
#      image: docker.elastic.co/kibana/kibana:8.7.1
#      container_name: kibana
#      environment:
#        XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: d1a66dfd-c4d3-4a0a-8290-2abcb83ab3aa
#      ports:
#        - 5601:5601
#      networks:
#        - elastic
#      deploy:
#        resources:
#          limits:
#            cpus: '2.0'
#          reservations:
#            cpus: '1.0'


volumes:
  certs:
    driver: local
  esdata01:
    driver: local
  esdata02:
    driver: local
  esdata03:
    driver: local
  kibanadata:
    driver: local


networks:
  elastic: